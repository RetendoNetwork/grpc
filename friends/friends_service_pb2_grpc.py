# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import accept_friend_request_rpc_pb2 as accept__friend__request__rpc__pb2
import deny_friend_request_rpc_pb2 as deny__friend__request__rpc__pb2
import get_user_friend_pids_rpc_pb2 as get__user__friend__pids__rpc__pb2
import get_user_friend_requests_incoming_rpc_pb2 as get__user__friend__requests__incoming__rpc__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import send_user_friend_request_rpc_pb2 as send__user__friend__request__rpc__pb2
import send_user_notification_wiiu_rpc_pb2 as send__user__notification__wiiu__rpc__pb2

GRPC_GENERATED_VERSION = '1.68.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in friends_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class FriendsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendUserNotificationWiiU = channel.unary_unary(
                '/friends.Friends/SendUserNotificationWiiU',
                request_serializer=send__user__notification__wiiu__rpc__pb2.SendUserNotificationWiiURequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetUserFriendPIDs = channel.unary_unary(
                '/friends.Friends/GetUserFriendPIDs',
                request_serializer=get__user__friend__pids__rpc__pb2.GetUserFriendPIDsRequest.SerializeToString,
                response_deserializer=get__user__friend__pids__rpc__pb2.GetUserFriendPIDsResponse.FromString,
                _registered_method=True)
        self.SendUserFriendRequest = channel.unary_unary(
                '/friends.Friends/SendUserFriendRequest',
                request_serializer=send__user__friend__request__rpc__pb2.SendUserFriendRequestRequest.SerializeToString,
                response_deserializer=send__user__friend__request__rpc__pb2.SendUserFriendRequestResponse.FromString,
                _registered_method=True)
        self.GetUserFriendRequestsIncoming = channel.unary_unary(
                '/friends.Friends/GetUserFriendRequestsIncoming',
                request_serializer=get__user__friend__requests__incoming__rpc__pb2.GetUserFriendRequestsIncomingRequest.SerializeToString,
                response_deserializer=get__user__friend__requests__incoming__rpc__pb2.GetUserFriendRequestsIncomingResponse.FromString,
                _registered_method=True)
        self.AcceptFriendRequest = channel.unary_unary(
                '/friends.Friends/AcceptFriendRequest',
                request_serializer=accept__friend__request__rpc__pb2.AcceptFriendRequestRequest.SerializeToString,
                response_deserializer=accept__friend__request__rpc__pb2.AcceptFriendRequestResponse.FromString,
                _registered_method=True)
        self.DenyFriendRequest = channel.unary_unary(
                '/friends.Friends/DenyFriendRequest',
                request_serializer=deny__friend__request__rpc__pb2.DenyFriendRequestRequest.SerializeToString,
                response_deserializer=deny__friend__request__rpc__pb2.DenyFriendRequestResponse.FromString,
                _registered_method=True)


class FriendsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendUserNotificationWiiU(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserFriendPIDs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendUserFriendRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserFriendRequestsIncoming(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcceptFriendRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DenyFriendRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FriendsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendUserNotificationWiiU': grpc.unary_unary_rpc_method_handler(
                    servicer.SendUserNotificationWiiU,
                    request_deserializer=send__user__notification__wiiu__rpc__pb2.SendUserNotificationWiiURequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetUserFriendPIDs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserFriendPIDs,
                    request_deserializer=get__user__friend__pids__rpc__pb2.GetUserFriendPIDsRequest.FromString,
                    response_serializer=get__user__friend__pids__rpc__pb2.GetUserFriendPIDsResponse.SerializeToString,
            ),
            'SendUserFriendRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.SendUserFriendRequest,
                    request_deserializer=send__user__friend__request__rpc__pb2.SendUserFriendRequestRequest.FromString,
                    response_serializer=send__user__friend__request__rpc__pb2.SendUserFriendRequestResponse.SerializeToString,
            ),
            'GetUserFriendRequestsIncoming': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserFriendRequestsIncoming,
                    request_deserializer=get__user__friend__requests__incoming__rpc__pb2.GetUserFriendRequestsIncomingRequest.FromString,
                    response_serializer=get__user__friend__requests__incoming__rpc__pb2.GetUserFriendRequestsIncomingResponse.SerializeToString,
            ),
            'AcceptFriendRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptFriendRequest,
                    request_deserializer=accept__friend__request__rpc__pb2.AcceptFriendRequestRequest.FromString,
                    response_serializer=accept__friend__request__rpc__pb2.AcceptFriendRequestResponse.SerializeToString,
            ),
            'DenyFriendRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.DenyFriendRequest,
                    request_deserializer=deny__friend__request__rpc__pb2.DenyFriendRequestRequest.FromString,
                    response_serializer=deny__friend__request__rpc__pb2.DenyFriendRequestResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'friends.Friends', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('friends.Friends', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Friends(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendUserNotificationWiiU(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/friends.Friends/SendUserNotificationWiiU',
            send__user__notification__wiiu__rpc__pb2.SendUserNotificationWiiURequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserFriendPIDs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/friends.Friends/GetUserFriendPIDs',
            get__user__friend__pids__rpc__pb2.GetUserFriendPIDsRequest.SerializeToString,
            get__user__friend__pids__rpc__pb2.GetUserFriendPIDsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendUserFriendRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/friends.Friends/SendUserFriendRequest',
            send__user__friend__request__rpc__pb2.SendUserFriendRequestRequest.SerializeToString,
            send__user__friend__request__rpc__pb2.SendUserFriendRequestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserFriendRequestsIncoming(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/friends.Friends/GetUserFriendRequestsIncoming',
            get__user__friend__requests__incoming__rpc__pb2.GetUserFriendRequestsIncomingRequest.SerializeToString,
            get__user__friend__requests__incoming__rpc__pb2.GetUserFriendRequestsIncomingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AcceptFriendRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/friends.Friends/AcceptFriendRequest',
            accept__friend__request__rpc__pb2.AcceptFriendRequestRequest.SerializeToString,
            accept__friend__request__rpc__pb2.AcceptFriendRequestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DenyFriendRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/friends.Friends/DenyFriendRequest',
            deny__friend__request__rpc__pb2.DenyFriendRequestRequest.SerializeToString,
            deny__friend__request__rpc__pb2.DenyFriendRequestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
